diff -ur cst_orig/maths_fns/direction_cosine.py cst/maths_fns/direction_cosine.py
--- cst_orig/maths_fns/direction_cosine.py	2010-03-30 20:13:34.000000000 +0200
+++ cst/maths_fns/direction_cosine.py	2010-03-30 21:12:32.000000000 +0200
@@ -61,7 +61,7 @@
     diff_data.dpar[2] = diff_data.cos_theta
 
     # Direction cosine.
-    data.dz = dot(data.xh_unit_vector, diff_data.dpar)
+    data.dz = dot(data.unit_vector, diff_data.dpar)
 
 
 
@@ -97,8 +97,8 @@
     diff_data.dpar_dphi[2] = 0.0
 
     # Direction cosine gradient.
-    data.ddz_dO[0] = dot(data.xh_unit_vector, diff_data.dpar_dtheta)
-    data.ddz_dO[1] = dot(data.xh_unit_vector, diff_data.dpar_dphi)
+    data.ddz_dO[0] = dot(data.unit_vector, diff_data.dpar_dtheta)
+    data.ddz_dO[1] = dot(data.unit_vector, diff_data.dpar_dphi)
 
 
 
@@ -145,9 +145,9 @@
     diff_data.dpar_dphi2[2] = 0.0
 
     # Direction cosine Hessian.
-    data.d2dz_dO2[0, 0] = dot(data.xh_unit_vector, diff_data.dpar_dtheta2)
-    data.d2dz_dO2[0, 1] = data.d2dz_dO2[1, 0] = dot(data.xh_unit_vector, diff_data.dpar_dthetadphi)
-    data.d2dz_dO2[1, 1] = dot(data.xh_unit_vector, diff_data.dpar_dphi2)
+    data.d2dz_dO2[0, 0] = dot(data.unit_vector, diff_data.dpar_dtheta2)
+    data.d2dz_dO2[0, 1] = data.d2dz_dO2[1, 0] = dot(data.unit_vector, diff_data.dpar_dthetadphi)
+    data.d2dz_dO2[1, 1] = dot(data.unit_vector, diff_data.dpar_dphi2)
 
 
 
@@ -230,9 +230,9 @@
     diff_data.dz[2] =  data.cos_b
 
     # Direction cosines.
-    data.dx = dot(data.xh_unit_vector, diff_data.dx)
-    data.dy = dot(data.xh_unit_vector, diff_data.dy)
-    data.dz = dot(data.xh_unit_vector, diff_data.dz)
+    data.dx = dot(data.unit_vector, diff_data.dx)
+    data.dy = dot(data.unit_vector, diff_data.dy)
+    data.dz = dot(data.unit_vector, diff_data.dz)
 
 
 
@@ -360,16 +360,16 @@
     # Direction cosine gradients
     ############################
 
-    data.ddx_dO[0] = dot(data.xh_unit_vector, diff_data.ddx_dalpha)
-    data.ddx_dO[1] = dot(data.xh_unit_vector, diff_data.ddx_dbeta)
-    data.ddx_dO[2] = dot(data.xh_unit_vector, diff_data.ddx_dgamma)
-
-    data.ddy_dO[0] = dot(data.xh_unit_vector, diff_data.ddy_dalpha)
-    data.ddy_dO[1] = dot(data.xh_unit_vector, diff_data.ddy_dbeta)
-    data.ddy_dO[2] = dot(data.xh_unit_vector, diff_data.ddy_dgamma)
+    data.ddx_dO[0] = dot(data.unit_vector, diff_data.ddx_dalpha)
+    data.ddx_dO[1] = dot(data.unit_vector, diff_data.ddx_dbeta)
+    data.ddx_dO[2] = dot(data.unit_vector, diff_data.ddx_dgamma)
+
+    data.ddy_dO[0] = dot(data.unit_vector, diff_data.ddy_dalpha)
+    data.ddy_dO[1] = dot(data.unit_vector, diff_data.ddy_dbeta)
+    data.ddy_dO[2] = dot(data.unit_vector, diff_data.ddy_dgamma)
 
-    data.ddz_dO[1] = dot(data.xh_unit_vector, diff_data.ddz_dbeta)
-    data.ddz_dO[2] = dot(data.xh_unit_vector, diff_data.ddz_dgamma)
+    data.ddz_dO[1] = dot(data.unit_vector, diff_data.ddz_dbeta)
+    data.ddz_dO[2] = dot(data.unit_vector, diff_data.ddz_dgamma)
 
 
 
@@ -581,20 +581,20 @@
     # Direction cosine Hessians
     ###########################
 
-    data.d2dx_dO2[0, 0] =                       dot(data.xh_unit_vector, diff_data.d2dx_dalpha2)
-    data.d2dx_dO2[0, 1] = data.d2dx_dO2[1, 0] = dot(data.xh_unit_vector, diff_data.d2dx_dalpha_dbeta)
-    data.d2dx_dO2[0, 2] = data.d2dx_dO2[2, 0] = dot(data.xh_unit_vector, diff_data.d2dx_dalpha_dgamma)
-    data.d2dx_dO2[1, 1] =                       dot(data.xh_unit_vector, diff_data.d2dx_dbeta2)
-    data.d2dx_dO2[1, 2] = data.d2dx_dO2[2, 1] = dot(data.xh_unit_vector, diff_data.d2dx_dbeta_dgamma)
-    data.d2dx_dO2[2, 2] =                       dot(data.xh_unit_vector, diff_data.d2dx_dgamma2)
-
-    data.d2dy_dO2[0, 0] =                       dot(data.xh_unit_vector, diff_data.d2dy_dalpha2)
-    data.d2dy_dO2[0, 1] = data.d2dy_dO2[1, 0] = dot(data.xh_unit_vector, diff_data.d2dy_dalpha_dbeta)
-    data.d2dy_dO2[0, 2] = data.d2dy_dO2[2, 0] = dot(data.xh_unit_vector, diff_data.d2dy_dalpha_dgamma)
-    data.d2dy_dO2[1, 1] =                       dot(data.xh_unit_vector, diff_data.d2dy_dbeta2)
-    data.d2dy_dO2[1, 2] = data.d2dy_dO2[2, 1] = dot(data.xh_unit_vector, diff_data.d2dy_dbeta_dgamma)
-    data.d2dy_dO2[2, 2] =                       dot(data.xh_unit_vector, diff_data.d2dy_dgamma2)
-
-    data.d2dz_dO2[1, 1] =                       dot(data.xh_unit_vector, diff_data.d2dz_dbeta2)
-    data.d2dz_dO2[1, 2] = data.d2dz_dO2[2, 1] = dot(data.xh_unit_vector, diff_data.d2dz_dbeta_dgamma)
-    data.d2dz_dO2[2, 2] =                       dot(data.xh_unit_vector, diff_data.d2dz_dgamma2)
+    data.d2dx_dO2[0, 0] =                       dot(data.unit_vector, diff_data.d2dx_dalpha2)
+    data.d2dx_dO2[0, 1] = data.d2dx_dO2[1, 0] = dot(data.unit_vector, diff_data.d2dx_dalpha_dbeta)
+    data.d2dx_dO2[0, 2] = data.d2dx_dO2[2, 0] = dot(data.unit_vector, diff_data.d2dx_dalpha_dgamma)
+    data.d2dx_dO2[1, 1] =                       dot(data.unit_vector, diff_data.d2dx_dbeta2)
+    data.d2dx_dO2[1, 2] = data.d2dx_dO2[2, 1] = dot(data.unit_vector, diff_data.d2dx_dbeta_dgamma)
+    data.d2dx_dO2[2, 2] =                       dot(data.unit_vector, diff_data.d2dx_dgamma2)
+
+    data.d2dy_dO2[0, 0] =                       dot(data.unit_vector, diff_data.d2dy_dalpha2)
+    data.d2dy_dO2[0, 1] = data.d2dy_dO2[1, 0] = dot(data.unit_vector, diff_data.d2dy_dalpha_dbeta)
+    data.d2dy_dO2[0, 2] = data.d2dy_dO2[2, 0] = dot(data.unit_vector, diff_data.d2dy_dalpha_dgamma)
+    data.d2dy_dO2[1, 1] =                       dot(data.unit_vector, diff_data.d2dy_dbeta2)
+    data.d2dy_dO2[1, 2] = data.d2dy_dO2[2, 1] = dot(data.unit_vector, diff_data.d2dy_dbeta_dgamma)
+    data.d2dy_dO2[2, 2] =                       dot(data.unit_vector, diff_data.d2dy_dgamma2)
+
+    data.d2dz_dO2[1, 1] =                       dot(data.unit_vector, diff_data.d2dz_dbeta2)
+    data.d2dz_dO2[1, 2] = data.d2dz_dO2[2, 1] = dot(data.unit_vector, diff_data.d2dz_dbeta_dgamma)
+    data.d2dz_dO2[2, 2] =                       dot(data.unit_vector, diff_data.d2dz_dgamma2)
diff -ur cst_orig/maths_fns/mf.py cst/maths_fns/mf.py
--- cst_orig/maths_fns/mf.py	2010-03-30 20:13:34.000000000 +0200
+++ cst/maths_fns/mf.py	2010-03-30 21:28:16.000000000 +0200
@@ -397,7 +397,9 @@
 
         # Direction cosine calculations.
         if self.diff_data.calc_di:
-            self.diff_data.calc_di(data, self.diff_data)
+	    # loop over the interactions
+	    for i in range(len(data)):
+                self.diff_data.calc_di(data[i], self.diff_data)
 
         # Diffusion tensor weight calculations.
         self.diff_data.calc_ci(data, self.diff_data)
@@ -511,7 +513,9 @@
 
             # Direction cosine calculations.
             if self.diff_data.calc_di:
-                self.diff_data.calc_di(data, self.diff_data)
+	        # loop over the interactions
+	        for i in range(len(data)):
+                    self.diff_data.calc_di(data[i], self.diff_data)
 
             # Diffusion tensor weight calculations.
             self.diff_data.calc_ci(data, self.diff_data)
@@ -578,7 +582,9 @@
 
             # Direction cosine calculations.
             if self.diff_data.calc_di:
-                self.diff_data.calc_di(data, self.diff_data)
+	        # loop over the interactions
+	        for i in range(len(data)):
+                    self.diff_data.calc_di(data[i], self.diff_data)
 
             # Diffusion tensor weight calculations.
             self.diff_data.calc_ci(data, self.diff_data)
@@ -766,7 +772,9 @@
 
             # Direction cosine calculations.
             if self.diff_data.calc_ddi:
-                self.diff_data.calc_ddi(data, self.diff_data)
+	        # loop over the interactions
+	        for i in range(len(data)):
+                    self.diff_data.calc_ddi(data[i], self.diff_data)
 
             # Diffusion tensor weight calculations.
             if self.diff_data.calc_dci:
@@ -847,7 +855,9 @@
 
             # Direction cosine calculations.
             if self.diff_data.calc_ddi:
-                self.diff_data.calc_ddi(data, self.diff_data)
+	        # loop over the interactions
+	        for i in range(len(data)):
+                    self.diff_data.calc_ddi(data[i], self.diff_data)
 
             # Diffusion tensor weight calculations.
             if self.diff_data.calc_dci:
@@ -1031,7 +1041,9 @@
 
             # Direction cosine calculations.
             if self.diff_data.calc_d2di:
-               self.diff_data.calc_d2di(data, self.diff_data)
+	        # loop over the interactions
+	        for i in range(len(data)):
+                    self.diff_data.calc_d2di(data[i], self.diff_data)
 
             # Diffusion tensor weight calculations.
             if self.diff_data.calc_d2ci:
@@ -1105,7 +1117,9 @@
 
             # Direction cosine calculations.
             if self.diff_data.calc_d2di:
-               self.diff_data.calc_d2di(data, self.diff_data)
+	        # loop over the interactions
+	        for i in range(len(data)):
+                    self.diff_data.calc_d2di(data[i], self.diff_data)
 
             # Diffusion tensor weight calculations.
             if self.diff_data.calc_d2ci:
